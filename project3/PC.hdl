// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];

    PARTS:
    Not(in=reset, out=notReset);
    And(a=notReset, b=load, out=shouldLoad);

    Not(in=load, out=notLoad);
    And(a=notReset, b=notLoad, out=notResetAndNotLoad);
    And(a=notResetAndNotLoad, b=inc, out=shouldInc);

    Or8Way(in[0]=reset, in[1]=load, in[2]=inc, out=loadRegister);

    Register(in=PCResult, load=loadRegister, out=registerOut, out=out);

    Inc16(in=registerOut, out=incResult);

    Or(a=shouldLoad, b=shouldInc, out=sel1);
    Or(a=reset, b=shouldInc, out=sel0);

    Mux4Way16(
        a=registerOut,
        b=false,
        c=in,
        d=incResult,
        sel[0]=sel0,
        sel[1]=sel1,
        out=PCResult
    );
}
